{
    "noir_version": "1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a",
    "hash": 14855555373834225931,
    "abi": {
        "parameters": [
            {
                "name": "age",
                "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 8
                },
                "visibility": "private"
            },
            {
                "name": "min_age",
                "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 8
                },
                "visibility": "public"
            },
            {
                "name": "aml_security",
                "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 8
                },
                "visibility": "private"
            },
            {
                "name": "min_aml_security",
                "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 8
                },
                "visibility": "public"
            },
            {
                "name": "user_country_id",
                "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                },
                "visibility": "public"
            },
            {
                "name": "restricted_country_ids",
                "type": {
                    "kind": "array",
                    "length": 15,
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    }
                },
                "visibility": "public"
            },
            {
                "name": "passport_is_valid",
                "type": {
                    "kind": "boolean"
                },
                "visibility": "private"
            },
            {
                "name": "passport_should_be_valid",
                "type": {
                    "kind": "boolean"
                },
                "visibility": "private"
            }
        ],
        "return_type": null,
        "error_types": {}
    },
    "bytecode": "H4sIAAAAAAAA/+Wc53ITQRCEW5YMDhiwLRsDJud8p2CfiCLnnLNxIT8Cz48HbothWfwD9VC7dVulOjEWrZ4+7TcCWVfDz7WyfvtW3q+t3+rlUdaYV6sFaiOBWj1Qa6zf9nu10UBtU6C2OVAbC9TGA7WJQG0yUNsSqE0FalsDtW2B2vZAbTpQmwnUZgO1pjoHrjanskV5Lvzlav3ymA23cq3VzpY6ncFya5C38y9Zq7dadLNOd3WpyIu8W3S/top2e1B0iuXeam856+Wd9iBf6/baa6VYjeUrz7JA6zRtnet8edwB72RIYcwz0Egk/H/VGqzJyvJ5oq8dRi+KmncuhvU5Tzyv/3MDjxAzqCO9DbxQHne6F4XbwFKw3sBW4Q+7gReIvnYijQ28AC6Y3aqTXzMNYs+jRK1dvB6zBn69u/FXjZwn07f2u9vS8G4D3UXii8Gq70UVMEn3N6jEvFk3EbX2IM3NyvSt/e61NLzXQHcf4t6s0vc+FTBJN5nNupmotR9pblamb+33gKXhAwa6BxH3ZpW+D6qASbq/bVb/363D5sDM9BAxy9D5GdafvOsRmLKBt4g4B9JhVG9gjBG1jiDNgcH0rf0etTR81ED3GOIeGNL3MRUwSdd0YDAzPQ7bgZENt3IZaIfB/89i5tA9gepBfpyodRJpQp7pW/s9ZWn4lIHuacQNeen7tAqYpGsKeWamZxA35GUInQAf8sxBeRbVg/wEUesc0oQ807f2m1kazgx0c8QNeelbf1xJ0jWFPDPTFuKGvAyhs+BDnjko26ge5CeJWh2kCXmmb+23a2m4a6C7hLghL30vqYBJuqaQZ2a6jLghL0OoDT7kmYOyQPUgv4Wo1UOakGf61n7PWxo+b6B7AXFDXvq+oAIm6ZpCnpnpRcQNeRlCBfiQZw7KS6ge5KeIWpeRJuSZvrXfK5aGrxjo9hE35PWJIuqaQp6Z6VXEDXkZQpfAhzxzUF5D9SC/lah1HWlCnulb+71hafiGge5NxA156fumCpikawp5Zqa3EDfkZQhdAx/yfWKGt1E9yG8jat1BmpBn+tZ+71oavmugew9xQ176vqcCJumaQp6Z6X3EDXkZQrfBhzxzUD5A9SC/naj1EGlCnulb+31kafiRge5jxA156fuxCpikawp5ZqZPEDfkZQg9AB/yzEH5FNWD/DRR6xnShDzTt/b73NLwcwPdF4gb8tL3CxUwSdcU8sxMXyJuyMsQego+5JmD8hWqB/kZotZrpAl5pm/t942l4TcGum8RN+Sl77cqYJKuKeSZmb5D3JCXIfQKfMgzB+V7VA/ys0StD0gT8kzf2u9HS8MfDXQ/IW7IS9+fVMAkXVPIMzP9jLghL0PoPfiQZw7KFfLrhp2hnOMV2O7tbMiFDfZLNtzKm8RzPQcu2N3lhRte/+JZnmumrMlj6+Xj5BKucmVIueCcXENILjEh30CWL6jJ9xfk11vlt5/kw3H57GS61JnFn8tl7S57PF4eJ7zn7XN6bjn9SRv9Hxfh89eEuj/5l/4bgb9X+8ufR7zjRo/d6M3GVOBnTtOdK+3X9THuHeeULjHL3Ok3bfSD52pO3W96feq8+yQPTs+9oR7Fn2vE+5l7rL9nanx/ue+lHngut9xrpqlqLs/vpEwWF+1jAAA=",
    "debug_symbols": "ldjBisIwEIDhd8nZQ5POTBJfZVmkapVCaaXWhUV8961SwdVe/lsmw5/Ld8vV7evt5bhpukN/duuvq2v7XTU2fTdNVxfC4+58qrr7eB6rYXTrUMrK1d1+Okm6rdyhaWu3Nn/7XrlQ4kJwobiwxcKKZ5HDexFxkXCRaVEWS4WonwvJ+l54XARclLgQXCguDBcRFwkXmRaCzQWbCzYXbC7YXLC5YHPB5oLNBZsrNldsrthcsblic8Xmis0Vmys2V2xu2NywuWFzw+aGzQ2bGzY3bG7Y3LB5xOYRm0dsHrF5xOYRm0dsHrF5xOYRmydsnrB5wuYJmydsnrB5wuYJmydsnrB5xuYZm2dsnrF5xuYZm2dsnrF5xuYZm/ui4InnSeBJyRPhifLEeBJ5knjC9T3X91zfc33P9T3X91zfL+qr6Jyo5o9kUV9jmBPz8V8yDduhadvmuHn955quf6qhqbZtPY+HS7d72Y6/p+fm2Z+GflfvL0N9f+mxm57/Aw==",
    "file_map": {
        "61": {
            "source": "fn main(\n  age: u8, \n  min_age: pub u8, \n  aml_security: u8, \n  min_aml_security: pub u8,\n  user_country_id: pub u32, \n  restricted_country_ids: pub [u32; 15],\n  passport_is_valid: bool,\n  passport_should_be_valid: bool,\n) {\n  assert(age >= min_age);\n  assert(aml_security >= min_aml_security);\n\n  // Check if user's country hash matches any restricted country hash\n  let mut is_restricted = false;\n  for i in 0..restricted_country_ids.len() {\n    if user_country_id == restricted_country_ids[i] {\n      is_restricted = true;\n    }\n  }\n  assert(!is_restricted);\n\n  assert(passport_is_valid == passport_should_be_valid);\n}\n\n#[test]\nfn test_main() {\n  main(\n    20,\n    18,\n    1,\n    1,\n    0x123456789abcdef, // Example hash for an allowed country\n    [\n      0x111111111111111, 0x222222222222222, 0x333333333333333,\n      0x444444444444444, 0x555555555555555, 0x666666666666666,\n      0x777777777777777, 0x888888888888888, 0x999999999999999,\n      0xaaaaaaaaaaaaaaa, 0xbbbbbbbbbbbbbbb, 0xccccccccccccccc,\n      0xddddddddddddddd, 0xeeeeeeeeeeeeeee, 0xfffffffffffffff\n    ],\n    true,\n    true\n  );\n}\n\n#[test(should_fail)]\nfn test_restricted_countries() {\n  main(\n    20,\n    18,\n    1,\n    1,\n    0x555555555555555, // Using a hash that matches a restricted country\n    [\n      0x111111111111111, 0x222222222222222, 0x333333333333333,\n      0x444444444444444, 0x555555555555555, 0x666666666666666,\n      0x777777777777777, 0x888888888888888, 0x999999999999999,\n      0xaaaaaaaaaaaaaaa, 0xbbbbbbbbbbbbbbb, 0xccccccccccccccc,\n      0xddddddddddddddd, 0xeeeeeeeeeeeeeee, 0xfffffffffffffff\n    ],\n    true,\n    true\n  );\n}",
            "path": "/home/s1x3l4/Desktop/onchain_id/prototypeV2/circuits/src/main.nr"
        }
    },
    "names": [
        "main"
    ],
    "brillig_names": [
        "directive_integer_quotient",
        "directive_invert"
    ]
}